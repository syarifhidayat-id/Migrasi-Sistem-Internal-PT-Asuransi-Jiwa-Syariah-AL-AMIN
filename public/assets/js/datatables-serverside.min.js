function serverSide(kodeTable, urlAjax, dFilter, dataKolom) {

    "use strict";

    // Class definition
    var KTDatatablesButtons = function() {
        // Shared variables
        var table;
        var datatable;

        // Private functions
        var initDatatable = function() {
            // Set date data order
            const tableRows = table.querySelectorAll('tbody tr');

            tableRows.forEach(row => {
                const dateRow = row.querySelectorAll('td');
                const realDate = moment(dateRow[3].innerHTML, "DD MMM YYYY, LT").format(); // select date from 4th column in table
                dateRow[3].setAttribute('data-order', realDate);
            });

            // Init datatable --- more info on datatables: https://datatables.net/manual/
            datatable = $(table).DataTable({
                processing: true,
                serverSide: true,
                // responsive: true,
                select: true,
                ajax: {
                    url: urlAjax,
                    data: dFilter,
                },
                columns: dataKolom,
            });


            datatable.on('draw', function() {
                KTMenu.createInstances();
            });

            datatable.on('responsive-display', function() {
                KTMenu.createInstances();
            });
        }

        // Hook export buttons
        var exportButtons = () => {
            const exportTitle = $('#btn_export').attr('data-title');
            var buttons = new $.fn.dataTable.Buttons(table, {
                buttons: [{
                        extend: 'copyHtml5',
                        title: exportTitle
                    },
                    {
                        extend: 'excelHtml5',
                        title: exportTitle
                    },
                    {
                        extend: 'csvHtml5',
                        title: exportTitle
                    },
                    {
                        extend: 'pdfHtml5',
                        title: exportTitle
                    }
                ]
            }).container().appendTo($('#kt_table_datatable_export'));

            // Hook dropdown menu click event to datatable export buttons
            const exportButtons = document.querySelectorAll('#kt_table_datatable_export_menu [data-kt-export]');
            exportButtons.forEach(exportButton => {
                exportButton.addEventListener('click', e => {
                    e.preventDefault();

                    // Get clicked export value
                    // const documentTitle = e.target.getAttribute('title-kt-export');
                    const exportValue = e.target.getAttribute('data-kt-export');
                    const target = document.querySelector('.dt-buttons .buttons-' + exportValue);

                    // Trigger click event on hidden datatable export buttons
                    target.click();
                });
            });
        };

        // Search Datatable --- official docs reference: https://datatables.net/reference/api/search()
        var handleSearchDatatable = () => {
            const filterSearch = document.querySelector('[data-kt-datatable-table-filter="search"]'),
                formOption = document.querySelector('[data-kt-datatable-table-filter="form"]'),
                resetOption = document.querySelector('[data-kt-datatable-table-filter="reset"]'),
                filterOp = formOption.querySelector('[data-kt-datatable-table-filter="filter"]'),
                selectOp = formOption.querySelectorAll('select'),
                inputOp = formOption.querySelectorAll('input');

            resetOption.addEventListener('click', (function() {
                selectOp.forEach((frxx => {
                    {
                        $(frxx).val('').trigger('change');
                    }
                })), datatable.search('').draw();

                inputOp.forEach((frxx => {
                    {
                        $(frxx).val('');
                    }
                })), datatable.search('').draw();
            }));

            filterOp.addEventListener('click', (function() {
                var formOption = "";
                selectOp.forEach(((frxx, filterOp) => {
                    frxx.value && "" !== frxx.value && (0 !== filterOp && (formOption += " "), formOption += frxx.value)
                })), datatable.search(formOption).draw();

                inputOp.forEach(((frxx, filterOp) => {
                    frxx.value && "" !== frxx.value && (0 !== filterOp && (formOption += " "), formOption += frxx.value)
                })), datatable.search(formOption).draw();
            }));

        }

        // Public methods
        return {
            init: function() {
                table = document.getElementById(kodeTable);
                // table = document.querySelector('#' + kodeTable);

                if (!table) {
                    return;
                }

                initDatatable();
                exportButtons();
                handleSearchDatatable();
            }
        };
    }();

    // On document ready
    KTUtil.onDOMContentLoaded(function() {
        KTDatatablesButtons.init();
    });
}

function dataTables(urlAjax, dataKolom) {
    "use strict";

    // Class definition
    var KTDatatablesButtons = function() {
        // Shared variables
        var table;
        var datatable;

        // Private functions
        var initDatatable = function() {
            // Set date data order
            const tableRows = table.querySelectorAll('tbody tr');

            tableRows.forEach(row => {
                const dateRow = row.querySelectorAll('td');
                const realDate = moment(dateRow[3].innerHTML, "DD MMM YYYY, LT").format(); // select date from 4th column in table
                dateRow[3].setAttribute('data-order', realDate);
            });

            // Init datatable --- more info on datatables: https://datatables.net/manual/
            datatable = $(table).DataTable({
                processing: true,
                serverSide: true,
                paging: false,
                info: false,
                ajax: {
                    url: urlAjax,
                },
                columns: dataKolom,
            });

            datatable.on('draw', function() {
                KTMenu.createInstances();
            });
        }

        // Public methods
        return {
            init: function() {
                table = document.querySelector('#serverSide');

                if (!table) {
                    return;
                }

                initDatatable();
            }
        };
    }();

    // On document ready
    KTUtil.onDOMContentLoaded(function() {
        KTDatatablesButtons.init();
    });

}

function dtTable(kodeTable, page, urlAjax, dataKolom, orderBy) {
    $('#' + kodeTable).DataTable({
        processing: true,
        serverSide: true,
        paging: page,
        info: page,
        destroy: true,
        searching: false,
        ordering: true,
        order: [orderBy],
        ajax: {
            url: urlAjax,
        },
        columns: dataKolom,
    });
}

function lodTable(idTable) {
    var oTable = $('#' + idTable).dataTable();
    oTable.fnDraw(false);
}

function filterAll(id, idTable) {
    var input = $(id).change(function() {
        lodTable(idTable);
    });
}

function filterInput(id, idTable) {
    var input1 = $('#' + id).keyup(function() {
        lodTable(idTable);
    });
    var input2 = $('#' + id).change(function() {
        lodTable(idTable);
    });
}

function filterSelect(id, idTable) {
    var select = $('#' + id).change(function() {
        lodTable(idTable);
    });
}
