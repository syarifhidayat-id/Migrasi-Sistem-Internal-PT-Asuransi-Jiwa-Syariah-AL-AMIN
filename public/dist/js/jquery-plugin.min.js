function bsimpan(id, text) {
    $('#' + id).html('<i class="fa-solid fa-floppy-disk"></i> ' + text);
}

function messages(msg) {
    $.each(msg, function(key, val) {
        // console.log(key);
        $('.' + key + '_err').text(val);
    });
}

function hidePesan(kode) {
    $('#' + kode).change(function(e) {
        e.preventDefault();
        $('.' + kode + '_err').text('');
    });

    $('#' + kode).keyup(function(e) {
        e.preventDefault();
        $('.' + kode + '_err').text('');
    });
}

function clearForm(kode) {
    $('#' + kode).trigger('reset');
}

function clearSelect() {
    $('.form-select').val(null).trigger('change');
}

function reset() {
    location.reload(true);
}

function closeModal(idModal) {
    $('#' + idModal).modal('hide');
}

function openModal(idModal) {
    $('#' + idModal).modal('show');
}

function titleAction(id, text) {
    $('#' + id).text(text);
}

function selectOp(kode) {
    $('#' + kode).select2();
}

function selectOpTag(kode) {
    $('#' + kode).select2({
        tags: true,
    });
}

function selectOpReq(kode) {
    $('#' + kode).addClass('required_sel');
    $('#' + kode).select2();
}

function selectOpReqTag(kode) {
    $('#' + kode).addClass('required_sel');
    $('#' + kode).select2({
        tags: true,
    });
}

function selectServerSide(kode, url, data, getVal) {
    $('#' + kode).select2({
        ajax: {
            url: url,
            dataType: 'json',
            delay: 250,
            processResults: data,
            cache: true
        }
    }).on('select2:select', getVal);
}

function selectServerSideReq(kode, url, data, getVal) {
    $('#' + kode).addClass('required_sel');
    $('#' + kode).select2({
        ajax: {
            url: url,
            dataType: 'json',
            delay: 250,
            processResults: data,
            cache: true,
        },
    }).on('select2:select', getVal);
}

function changeSelect(id_get, id_val, url, data, getVal) {
    $('#' + id_get).change(function() {
        var kode = $(this).val();
        if (kode !== "" && kode !== null) {
            selectServerSideReq(
                id_val,
                url + '/' + kode,
                data,
                getVal
            );
        } else {
            $('#' + id_val).val(null).trigger('change');
        }
    });
}

function changeSelect2(id_get1, id_get2, id_val, url, data, getVal) {
    $('#' + id_get1).change(function() {
        var kode1 = $(this).val();
        if (kode1 !== "" && kode1 !== null) {
            $('#' + id_get2).change(function() {
                var kode2 = $(this).val();
                if (kode1 !== "" && kode1 !== null) {
                    selectServerSideReq(
                        id_val,
                        url + '/' + kode1 + '/' + kode2,
                        data,
                        getVal
                    );
                } else {
                    $('#' + id_val).val(null).trigger('change');
                }
            });
        } else {
            $('#' + id_val).val(null).trigger('change');
        }
    });
}

function setText(kode, value) {
    const id = $('#' + kode);
    return id.val(value);
}

function setTextReq(kode) {
    $('#' + kode).val();
    $('#' + kode).addClass('required_sel');
}

function setSelect(kode, value) {
    const id = $('#' + kode);
    return id.val(value);
}

function setTextReadOnly(kode, kondisi) {
    $('#' + kode).prop('readonly', kondisi);
    $('#' + kode).addClass('required_sel');
}

function setSelectReadOnly(kode, kondisi) {
    const id = $('#' + kode);
    id.addClass('required_sel');
    // id.select2();
    id.prop('disabled', kondisi);
}

function getText(kode) {
    const id = $('#' + kode);
    if (id !== "" && id !== null) {
        return id.val();
    } else {
        return id.val('');
    }
}

function getSelect(kode) {
    const id = $('#' + kode);
    // if (id !== "" && id !== null) {
    return id.val();
    // } else {
    //     return id.val('');
    // }
}

function logSelect(id) {
    $('#' + id).change(function() {
        var cek = $(this).val();
        console.log(cek);
    });
}

function logInput(id) {
    $('#' + id).keyup(function() {
        var cek = $(this).val();
        console.log(cek);
    });
}

function messageValidate(pesan, icon, btn_text, data_res) {
    Swal.fire({
        title: pesan,
        // text: pesan,
        icon: icon,
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: btn_text
    }).then(data_res);
}

function message(icon, title, pesan) {
    Swal.fire({
        icon: icon,
        title: title,
        text: pesan,
    });
}

function pesan(pesan) {
    Swal.fire(
        pesan,
        '',
        'question'
    )
}

function viewPdf(idInput, idCanvas) {
    $("#" + idInput).change(function(e) {
        var file = e.target.files[0];
        if (file.type == "application/pdf") {
            var fileReader = new FileReader();
            fileReader.onload = function() {
                var pdfData = new Uint8Array(this.result);
                // Using DocumentInitParameters object to load binary data.
                var loadingTask = pdfjsLib.getDocument({ data: pdfData });
                loadingTask.promise.then(function(pdf) {
                    // console.log('PDF loaded');

                    // Fetch the first page
                    var pageNumber = 1;
                    pdf.getPage(pageNumber).then(function(page) {
                        // console.log('Page loaded');

                        var scale = 1.5;
                        var viewport = page.getViewport({ scale: scale });

                        // Prepare canvas using PDF page dimensions
                        var canvas = $("#" + idCanvas)[0];
                        var context = canvas.getContext('2d');
                        canvas.height = viewport.height;
                        canvas.width = viewport.width;

                        // Render PDF page into canvas context
                        var renderContext = {
                            canvasContext: context,
                            viewport: viewport
                        };
                        var renderTask = page.render(renderContext);
                        renderTask.promise.then(function() {
                            console.log('Page rendered');
                        });
                    });
                }, function(reason) {
                    // PDF loading error
                    console.error(reason);
                });
            };
            fileReader.readAsArrayBuffer(file);
        }
    });
}

function submitImportSoc(idForm, idBtn, title, urlAjax, idModal) {
    $('#' + idForm).submit(function(e) {
        e.preventDefault();
        var formData = new FormData(this);
        bsimpan(idBtn, 'Please wait..');
        Swal.fire({
            title: title,
            input: 'select',
            inputOptions: {
                '0': 'Tidak',
                '1': 'Ya',
            },
            // inputPlaceholder: 'Pilih konfirmasi',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Ya, simpan!'
        }).then((result) => {
            if (result.isConfirmed) {
                var status = result.value;
                $.ajax({
                    url: urlAjax + "/" + status,
                    type: "POST",
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function(res) {
                        // console.log(res);
                        if ($.isEmptyObject(res.error)) {
                            if (res.success) {
                                Swal.fire(
                                    'Berhasil!',
                                    res.success,
                                    'success'
                                ).then((res) => {
                                    clearForm(idForm);
                                    clearSelect();
                                    bsimpan(idBtn, 'Simpan');
                                    closeModal(idModal);
                                });
                            } else {
                                Swal.fire(
                                    'Gagal!',
                                    res.errors,
                                    'error'
                                ).then((res) => {
                                    bsimpan(idBtn, 'Simpan');
                                });
                            }
                        } else {
                            bsimpan(idBtn, 'Simpan');
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Field harus ter isi!',
                            });
                            messages(res.error);
                        }
                    },
                    error: function(err) {
                        bsimpan(idBtn, 'Simpan');
                        console.log('Error:', err);
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Terjadi kesalahan!',
                        });
                    }
                });
            } else {
                bsimpan(idBtn, 'Simpan');
            }
        });
    });
}

function submitForm(idForm, idBtn, urlAjax, aksiRes) {
    $('#' + idBtn).click(function(e) {
        e.preventDefault();
        var dataFrx = $('#' + idForm).serialize();
        bsimpan(idBtn, 'Please wait..');

        Swal.fire({
            title: "Apalah anda yakin?",
            text: "Data yang di inputkan sudah benar!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Ya, simpan!'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: urlAjax,
                    type: "POST",
                    data: dataFrx,
                    dataType: 'json',
                    success: function(res) {
                        console.log(res);
                        if ($.isEmptyObject(res.error)) {
                            // console.log(res);
                            Swal.fire(
                                'Berhasil!',
                                res.success,
                                'success'
                            ).then(aksiRes);
                        } else {
                            bsimpan(idBtn, 'Simpan');
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Field harus ter isi!',
                            });
                            messages(res.error);
                        }
                    },
                    error: function(err) {
                        console.log('Error:', err);
                        bsimpan(idBtn, 'Simpan');
                    }
                });
            } else {
                bsimpan(idBtn, 'Simpan');
            }
        });
    });
}

function submitFormWithFile(idForm, idBtn, urlAjax, aksiRes) {
    $('#' + idForm).submit(function(e) {
        e.preventDefault();
        var formData = new FormData(this);
        bsimpan(idBtn, 'Please wait..');

        Swal.fire({
            title: "Apalah anda yakin?",
            text: "Data yang di inputkan sudah benar!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Ya, simpan!'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: urlAjax,
                    type: "POST",
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function(res) {
                        console.log(res);
                        if ($.isEmptyObject(res.error)) {
                            // console.log(res);
                            Swal.fire(
                                'Berhasil!',
                                res.success,
                                'success'
                            ).then(aksiRes);
                        } else {
                            bsimpan(idBtn, 'Simpan');
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Field harus ter isi!',
                            });
                            messages(res.error);
                        }
                    },
                    error: function(err) {
                        console.log('Error:', err);
                        bsimpan(idBtn, 'Simpan');
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Terjadi kesalahan!',
                        });
                    }
                });
            } else {
                bsimpan(idBtn, 'Simpan');
            }
        });
    });
}